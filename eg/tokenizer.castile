fun instr(c: string, s: string) {
  var i = 0;
  while i < len(s) {
    if c == substr(s, i, 1) { return true; }
    i = i + 1
  }
  false
}

alpha = "abcdefghijklmnopqrstuvwxyz"

struct result {
  token: string;
  remainder: string;
}

fun scan(s: string) {
  var i = 0;
  var t = "";
  while true {
    var c = substr(s, i, 1);
    if c != " " {
      if instr(c, alpha) {
        while instr(c, alpha) {
          t = concat(t, c);
          i = i + 1
          c = substr(s, i, 1);
        }
        break;
      }
    }
    i = i + 1
  }
  var r = substr(s, i, len(s)-i);
  make result(token:t, remainder:r)
}

fun main() {
  var s = input(">> ")
  while len(s) > 0 {
    while len(s) > 0 {
      var r = scan(s);
      print(r.token);
      s = r.remainder;
    }
    s = input(">> ")
  }
}
